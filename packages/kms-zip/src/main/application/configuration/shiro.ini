[main]
# setting ssl.enabled to false disables the "ssl required" filter
ssl.enabled = true
ssl.port = 443

x509Matcher = com.intel.mtwilson.shiro.authc.dhsm2.x509.X509CredentialsIssuerDNSNMatcher
x509Realm = com.intel.mtwilson.shiro.authc.dhsm2.x509.X509Realm
x509Realm.credentialsMatcher = $x509Matcher

jwtRealm=com.intel.mtwilson.shiro.authc.token.JWTRealm
jwtMatcher=com.intel.mtwilson.shiro.authc.token.JWTSignatureMatcher
jwtRealm.credentialsMatcher=$jwtMatcher
jwtRealm.applicationName=KMS

securityManager.realms = $jwtRealm

authcStrategy = com.intel.mtwilson.shiro.LoggingAtLeastOneSuccessfulStrategy
securityManager.authenticator.authenticationStrategy = $authcStrategy

jwtauthcToken = com.intel.mtwilson.shiro.authc.token.JWTTokenAuthenticationFilter
jwtauthcToken.applicationName = KMS
jwtauthcToken.sendChallenge = false
jwtauthcToken.permissive = false

authcX509 = com.intel.mtwilson.shiro.authc.dhsm2.x509.X509AuthenticationFilter

# define security by url matching, the first match wins so order is important
# also /path/*  will match /path/a and /path/b but not /path/c/d
# but /path/**  will match /path/a and /path/b and also /path/c/d
[urls]
/index.html = anon
/v1/resources/** = ssl
/v1/html5/public/** = ssl
/v1/login = ssl
/v1/version = ssl
/v1/keys/*/transfer = jwtauthcToken[permissive]
/v1/images/*/downloads*/* = ssl, jwtauthcToken
/v1/keys/*/dhsm2-transfer = ssl, authcX509
/v1/session = ssl, authcX509
/v1/** = ssl, jwtauthcToken
